// <auto-generated />
using System;
using LuxuryLife.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LuxuryLife.Migrations
{
    [DbContext(typeof(TourBookingContext))]
    [Migration("20241216073001_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LuxuryLife.Models.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminId"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("AdminId")
                        .HasName("PK__Admin__719FE488CCBBC051");

                    b.HasIndex(new[] { "Email" }, "UQ__Admin__A9D10534B027E995")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime?>("BookingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("CheckInDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CheckOutDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("BookingId")
                        .HasName("PK__Booking__73951AED39332FF9");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TourId");

                    b.ToTable("Booking", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Demographics")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateOnly?>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Preferences")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("SearchHistory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64D8CED30739");

                    b.HasIndex(new[] { "Email" }, "UQ__Customer__A9D105343E5F5B4C")
                        .IsUnique();

                    b.ToTable("Customer", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Favourite", b =>
                {
                    b.Property<int>("FavoriteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FavoriteId"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Sumprice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("FavoriteId")
                        .HasName("PK__Favourit__CE74FAD5B2B8E927");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TourId");

                    b.ToTable("Favourite", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Homestay", b =>
                {
                    b.Property<int>("HomestayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HomestayId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("PricePerNight")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("HomestayId")
                        .HasName("PK__Homestay__EDCB5CBABC26500E");

                    b.HasIndex("ProviderId");

                    b.ToTable("Homestay", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Listimagestour", b =>
                {
                    b.Property<int>("ListimagestourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ListimagestourId"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ImageDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("ListimagestourId")
                        .HasName("PK__Listimag__C13099DB06DC99D8");

                    b.HasIndex("TourId");

                    b.ToTable("Listimagestour", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.News", b =>
                {
                    b.Property<int>("NewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NewId")
                        .HasName("PK__News__7CC3777EEB9A1D67");

                    b.ToTable("News");
                });

            modelBuilder.Entity("LuxuryLife.Models.Provider", b =>
                {
                    b.Property<int>("ProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProviderId"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Avatar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(3, 2)");

                    b.HasKey("ProviderId")
                        .HasName("PK__Provider__B54C687D284498A8");

                    b.HasIndex(new[] { "Email" }, "UQ__Provider__A9D10534A5ED99BC")
                        .IsUnique();

                    b.ToTable("Provider", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rating")
                        .HasColumnType("decimal(3, 2)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("ReviewId")
                        .HasName("PK__Review__74BC79CE402D27CA");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TourId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TourId")
                        .HasColumnType("int");

                    b.HasKey("ServiceId")
                        .HasName("PK__Service__C51BB00AB64FBE5D");

                    b.HasIndex("TourId");

                    b.ToTable("Service", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Tour", b =>
                {
                    b.Property<int>("TourId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TourId"));

                    b.Property<DateTime?>("Createdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("HomestayId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("PricePerson")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int?>("ProviderId")
                        .HasColumnType("int");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TourId")
                        .HasName("PK__Tour__604CEA3002475256");

                    b.HasIndex("ProviderId");

                    b.ToTable("Tour", (string)null);
                });

            modelBuilder.Entity("LuxuryLife.Models.Booking", b =>
                {
                    b.HasOne("LuxuryLife.Models.Customer", "Customer")
                        .WithMany("Bookings")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Booking__Custome__5812160E");

                    b.HasOne("LuxuryLife.Models.Tour", "Tour")
                        .WithMany("Bookings")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__Booking__TourId__59063A47");

                    b.Navigation("Customer");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("LuxuryLife.Models.Favourite", b =>
                {
                    b.HasOne("LuxuryLife.Models.Customer", "Customer")
                        .WithMany("Favourites")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Favourite__Custo__4E88ABD4");

                    b.HasOne("LuxuryLife.Models.Tour", "Tour")
                        .WithMany("Favourites")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__Favourite__TourI__4F7CD00D");

                    b.Navigation("Customer");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("LuxuryLife.Models.Homestay", b =>
                {
                    b.HasOne("LuxuryLife.Models.Provider", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("LuxuryLife.Models.Listimagestour", b =>
                {
                    b.HasOne("LuxuryLife.Models.Tour", "Tour")
                        .WithMany("Listimagestours")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__Listimage__TourI__46E78A0C");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("LuxuryLife.Models.Review", b =>
                {
                    b.HasOne("LuxuryLife.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Review__Customer__534D60F1");

                    b.HasOne("LuxuryLife.Models.Tour", "Tour")
                        .WithMany("Reviews")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__Review__TourId__5441852A");

                    b.Navigation("Customer");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("LuxuryLife.Models.Service", b =>
                {
                    b.HasOne("LuxuryLife.Models.Tour", "Tour")
                        .WithMany("Services")
                        .HasForeignKey("TourId")
                        .HasConstraintName("FK__Service__TourId__4BAC3F29");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("LuxuryLife.Models.Tour", b =>
                {
                    b.HasOne("LuxuryLife.Models.Provider", "Provider")
                        .WithMany("Tours")
                        .HasForeignKey("ProviderId")
                        .HasConstraintName("FK__Tour__ProviderId__4316F928");

                    b.Navigation("Provider");
                });

            modelBuilder.Entity("LuxuryLife.Models.Customer", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Favourites");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("LuxuryLife.Models.Provider", b =>
                {
                    b.Navigation("Tours");
                });

            modelBuilder.Entity("LuxuryLife.Models.Tour", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Favourites");

                    b.Navigation("Listimagestours");

                    b.Navigation("Reviews");

                    b.Navigation("Services");
                });
#pragma warning restore 612, 618
        }
    }
}
